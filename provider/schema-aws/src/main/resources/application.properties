# Copyright ï¿½ 2020 Amazon Web Services
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

server.servlet.context-path=/api/schema-service/v1
logging.level.org.springframework.web=${LOG_LEVEL:INFO}
server.port=${APPLICATION_PORT:8080}
aws.resource.prefix=${ENVIRONMENT}

AUTHORIZE_API=${ENTITLEMENTS_BASE_URL}/api/entitlements/v2
AUTHORIZE_API_KEY=
PARTITION_API=${ENTITLEMENTS_BASE_URL}/api/partition/v1

LOG_PREFIX=schema

aws.ssm=${SSM_ENABLED:True}
aws.parameter.prefix=/osdu/${ENVIRONMENT}
aws.environment=${ENVIRONMENT}

## AWS s3 Configuraiton 

#Tenant Specific S3 Bucket Configuration
aws.s3.schemaBucket.ssm.relativePath=${SCHEMA_BUCKET_SSM_RELATIVE_PATH:schema/s3DataBucket}

## AWS DynamoDB configuration
# needed for tenantfactory
aws.dynamodb.key=kind
aws.dynamodb.table.prefix=${aws.resource.prefix}-
aws.region=${AWS_REGION}
aws.dynamodb.endpoint=dynamodb.${AWS_REGION}.amazonaws.com

aws.dynamodb.authorityTable.ssm.relativePath=${AUTHORITY_TABLE_SSM_RELATIVE_PATH:schema/AuthorityTable}
aws.dynamodb.entityTypeTable.ssm.relativePath=${ENTITY_TYPE_TABLE_SSM_RELATIVE_PATH:schema/EntityTypeTable}
aws.dynamodb.schemaInfoTable.ssm.relativePath=${SCHEMA_INFO_TABLE_SSM_RELATIVE_PATH:schema/SchemaInfoTable}
aws.dynamodb.sourceTable.ssm.relativePath=${SOURCE_TABLE_SSM_RELATIVE_PATH:schema/SourceTable}

# if this is turned on then the service tries to connect to elastic search
management.health.elasticsearch.enabled=false

# Use this property to name your shared tenant name
shared.tenant.name=common

server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${SSL_KEY_STORE_PATH:/certs/osduonaws.p12}
server.ssl.key-alias=${SSL_KEY_ALIAS:osduonaws}
server.ssl.key-password=${SSL_KEY_PASSWORD:}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD:}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration