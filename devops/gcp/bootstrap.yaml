osdu-gcp-bootstrap:
  stage: bootstrap
  image: python:3.8
  needs: ["osdu-gcp-deploy-deployment"]
  extends:
    - .osdu-gcp-variables
  variables:
    JSON_KEY: $OSDU_GCP_INTEGRATION_TESTER
    AUDIENCE: $GOOGLE_AUDIENCE
    DATA_PARTITION: $OSDU_GCP_TENANT
  script:
    - pip install -r $OSDU_GCP_DEPLOYMENTS_SUBDIR/requirements.txt
    - pip install -r $OSDU_GCP_DEPLOYMENTS_SCRIPTS_SUBDIR/gcp-deployment-requirements.txt
    - export BEARER_TOKEN=$(python $OSDU_GCP_DEPLOYMENTS_SUBDIR/Token.py)
    - python $OSDU_GCP_DEPLOYMENTS_SCRIPTS_SUBDIR/DeploySharedSchemas.py -u $OSDU_GCP_SCHEMA_URL/schema
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: never
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: never
    - if: '$OSDU_GCP == "true"'
      when: on_success

osdu-gcp-bootstrap-dev2:
  stage: bootstrap
  image: python:3.8
  needs: ["osdu-gcp-dev2-deploy-deployment"]
  extends: .osdu-gcp-dev2-variables
  variables:
    JSON_KEY: $OSDU_GCP_INTEGRATION_TESTER
    AUDIENCE: $GOOGLE_AUDIENCE
    DATA_PARTITION: $OSDU_GCP_TENANT
  script:
    - pip install -r $OSDU_GCP_DEPLOYMENTS_SUBDIR/requirements.txt
    - pip install -r $OSDU_GCP_DEPLOYMENTS_SCRIPTS_SUBDIR/gcp-deployment-requirements.txt
    - export BEARER_TOKEN=$(python $OSDU_GCP_DEPLOYMENTS_SUBDIR/Token.py)
    - python $OSDU_GCP_DEPLOYMENTS_SCRIPTS_SUBDIR/DeploySharedSchemas.py -u $OSDU_GCP_SCHEMA_URL/schema
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success

osdu-gcp-test:
  needs: ["osdu-gcp-bootstrap"]
  # Rules should be deleted here after common pipeline is updated with this rules
  rules:
    - if: '$OSDU_GCP == "true" && $OSDU_GCP_INT_TEST_TYPE != "python" && $CI_COMMIT_BRANCH =~ /^release/'
      when: never
    - if: '$OSDU_GCP == "true" && $OSDU_GCP_INT_TEST_TYPE != "python" && $CI_COMMIT_TAG'
      when: never
    - if: '$OSDU_GCP == "true" && $OSDU_GCP_INT_TEST_TYPE != "python"'
      when: on_success

osdu-gcp-dev2-test:
  needs: ["osdu-gcp-bootstrap-dev2"]

osdu-gcp-containerize-bootstrap-gitlab:
  stage: containerize
  image: docker:19.03.15
  tags: ["osdu-medium"]
  services:
    - docker:20.10.7-dind
  script:
    - export EXTRA_DOCKER_TAG=""; if [ "$CI_COMMIT_TAG" != "" ] ; then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/osdu-gcp-bootstrap:$CI_COMMIT_TAG" ; elif [ "$CI_COMMIT_REF_NAME" = "master" ] ; then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/osdu-gcp-bootstrap:latest" ; fi
    - docker build -t $CI_REGISTRY_IMAGE/osdu-gcp-bootstrap:$CI_COMMIT_SHORT_SHA $EXTRA_DOCKER_TAG --file devops/$OSDU_GCP_VENDOR/bootstrap-osdu-module/Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/osdu-gcp-bootstrap
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^master$/'
      when: on_success
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /.*bootstrap.*/'
      when: on_success
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
