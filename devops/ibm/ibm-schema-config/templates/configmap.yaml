apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.conf.configmap }}"
data:
#log-and-common
  LOG_LEVEL: "{{ .Values.data.logLevel }}"
  LOG_PREFIX: "{{ .Values.data.logPrefix }}"
  logging.level.org.opengroup.osdu: "{{ .Values.data.loggingLevelOsdu }}"
  logging.level.org.springframework.web: "{{ .Values.data.loggingLevelSpring }}"
  JAVA_APP_JAR: "{{ .Values.data.javaAppJar }}"
  server.servlet.context-path: "{{ .Values.data.contextPath }}"
  server.port: "{{ .Values.data.serverPort }}"
  spring.main.allow-bean-definition-overriding: "{{ .Values.data.beanDefOverriding }}"

#db
  ibm.db.url: "http://{{ .Release.Name }}-couchdb:5984"
  ibm.db.user: "{{ .Values.data.dbUser }}"
  ibm.env.prefix: "{{ .Values.data.envPrefix }}"
  ibm.env.prefix_project: "{{ .Values.data.envPrefixProject }}"
  ibm.db.password: "{{ .Values.data.dbPassw }}"

#minio
  ibm.cos.endpoint_url: "http://{{ .Release.Name }}-minio:9000"
  #accesskey and secretkey of minio - refer deployment yaml
  ibm.cos.access_key: "{{ .Values.data.accessKey }}"
  ibm.cos.secret_key: "{{ .Values.data.secretKey }}"
  IBM_COS_REGION: us-east-1
  
  cache.expiration: "{{ .Values.data.cacheExpiration }}"
  cache.maxSize: "{{ .Values.data.cahceMaxSize }}"
  ibm.health-check-uri: "{{ .Values.data.healthCheckUri }}"

#Authorization  
  AUTHORIZE_API: "http://{{ .Release.Name }}-ibm-entitlement-deploy:8080/api/entitlements/v2"
  DEPLOYMENT_ENVIRONMENT: "{{ .Values.data.deployEnv }}"

#tenant-validation
  PARTITION_API: "http://{{ .Release.Name }}-ibm-partition-deploy:8080/api/partition/v1"
  partition.keycloak.client_id: "{{ .Values.data.pKCClientId }}"
  partition.keycloak.client_secert: "{{ .Values.data.pKCClientSecret }}"
  partition.keycloak.grant_type: "{{ .Values.data.grantType }}"
  partition.keycloak.password: "{{ .Values.data.pKCPassword }}"
  partition.keycloak.realm: "{{ .Values.data.keycloakRealm }}"
  partition.keycloak.url: "{{ .Values.data.pKCEndPointHost }}"
  partition.keycloak.user: "{{ .Values.data.pKCUser }}"
  partition.keycloak.accept_http: "{{ .Values.data.pKAcceptHttp }}"
  tenantCache.exp.time.in.second: "{{ .Values.data.tenantCacheExpiryInSec }}"
