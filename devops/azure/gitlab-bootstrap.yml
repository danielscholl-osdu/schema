azure_bootstrap:
  stage: bootstrap
  image: danielscholl/azure-build-image
  needs: ["azure_deploy"]
  tags: ["osdu-medium"]
  variables:
    SHA_IMAGE: ${CI_PROJECT_NAME}-schema-load-${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
    LATEST_IMAGE: ${CI_PROJECT_NAME}-schema-load-${CI_COMMIT_REF_SLUG}:latest
    DST_REGISTRY: "msosdu"
  extends:
    - .azure_variables
  before_script:
    - |
      # Generating environment file to be passed while running the docker container
      cat > .env << EOF
      AZURE_DNS_NAME=${AZURE_DNS_NAME}
      AZURE_TENANT_ID=${AZURE_TENANT_ID}
      AZURE_AD_APP_RESOURCE_ID=${AZURE_AD_APP_RESOURCE_ID}
      AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      EOF

  script:
    - |
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      az --version
      az login --service-principal -u $AZURE_PRINCIPAL_ID -p $AZURE_PRINCIPAL_SECRET --tenant $AZURE_TENANT_ID

      docker build -t $CI_REGISTRY_IMAGE/$SHA_IMAGE --file $AZURE_DEPLOYMENTS_SUBDIR/Dockerfile .
      docker push ${CI_REGISTRY_IMAGE}/$SHA_IMAGE

    # Azure Container Registry
    - az acr login -n $AZURE_REGISTRY
    - docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE ${AZURE_REGISTRY}.azurecr.io/$SHA_IMAGE
    - docker push ${AZURE_REGISTRY}.azurecr.io/$SHA_IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE ${AZURE_REGISTRY}.azurecr.io/$LATEST_IMAGE
    - docker push ${AZURE_REGISTRY}.azurecr.io/$LATEST_IMAGE
    - |
      if [[ -z $CI_COMMIT_TAG ]] && [[ $CI_COMMIT_BRANCH =~ ^release\/[0-9]{1,2}.[0-9]{1,2}$ ]]; 
      then
        RELEASE_VER=$(echo $CI_COMMIT_BRANCH | sed "s?^release/??");
        AZ_VER="$RELEASE_VER.0-r"
      elif [[ $CI_COMMIT_TAG =~ ^v[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}$ ]]; 
      then
        AZ_VER=$(echo $CI_COMMIT_TAG | sed "s/^v//");
      else
        AZ_VER=0.0.0-unknown;
      fi;
      REL_IMG_NAME='schema-data-init'
      if [[ $AZ_VER != 0.0.0-unknown ]];
      then
        az acr login -n ${DST_REGISTRY}
        echo $AZ_VER
        docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE ${DST_REGISTRY}.azurecr.io/$REL_IMG_NAME:$AZ_VER
        docker push ${DST_REGISTRY}.azurecr.io/$REL_IMG_NAME:$AZ_VER
      fi;

    - docker run  --env-file .env $CI_REGISTRY_IMAGE/$SHA_IMAGE

  only:
    variables:
      - $AZURE == '1'

azure_test:
  only:
    variables:
      - $AZURE == '1'
