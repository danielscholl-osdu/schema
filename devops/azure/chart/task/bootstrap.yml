parameters:
  providers: []

stages:

- ${{ each provider in parameters.providers }}:
  - ${{ each environment in provider.environments }}: 
    - stage: 'Bootstrap_Schemas_${{ provider.name }}_${{ environment }}'
      displayName: 'Bootstrap_Schemas_${{ provider.name }}_${{ environment }}'
      jobs:   
        - job: 'Bootstrap_shared_schemas_job_${{ environment }}'
          displayName: 'Bootstrap_shared_schemas_job_${{ environment }}'
          variables:
          - group: '${{ provider.name }} Target Env Secrets - ${{ environment }}'
          - group: '${{ provider.name }} Target Env - ${{ environment }}'
          - group: '${{ provider.name }} Service Release - schema-service'
          steps:
            - task: UsePythonVersion@0
              inputs:
                versionSpec: '3.x'
                addToPath: true
                architecture: 'x64'
            
            - task: Bash@3
              displayName: 'Deploy Shared Schemas'
              inputs:
                targetType: 'inline'
                script: |
                  pip install -r deployments/scripts/azure/requirements.txt

                  export AZURE_AD_TENANT_ID=$(AZURE_TENANT_ID)
                  export AZURE_AD_APP_RESOURCE_ID=$(AZURE_AD_APP_RESOURCE_ID)
                  export INTEGRATION_TESTER=$(INTEGRATION_TESTER)
                  export TESTER_SERVICEPRINCIPAL_SECRET=$(AZURE_TESTER_SERVICEPRINCIPAL_SECRET)
                  
                  export DATA_PARTITION=$(DEFAULT_TENANT)
                  export DEPLOY_SCHEMAS_URL=$(DEPLOY_SCHEMAS_URL)
                  export APP_KEY=""
                  
                  AZURE_SP_TOKEN=$(python deployments/scripts/azure/Token.py)
                  export BEARER_TOKEN=$AZURE_SP_TOKEN

                  echo $DATA_PARTITION
                  echo $DEPLOY_SCHEMAS_URL
                  
                  python deployments/scripts/DeploySharedSchemas.py -u $DEPLOY_SCHEMAS_URL
